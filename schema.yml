openapi: 3.0.3
info:
  title: Urubytes API
  version: 1.0.0
  description: Urubytes API documentation
paths:
  /accounts/register/:
    post:
      operationId: accounts_register_create
      tags:
      - accounts
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /accounts/token/:
    post:
      operationId: accounts_token_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
  /accounts/token/refresh/:
    post:
      operationId: accounts_token_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /accounts/token/verify/:
    post:
      operationId: accounts_token_verify_create
      description: |-
        Takes a token and indicates if it is valid.  This view provides no
        information about a token's fitness for a particular use.
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenVerify'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenVerify'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenVerify'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenVerify'
          description: ''
  /auxi/:
    get:
      operationId: auxi_retrieve
      tags:
      - auxi
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /auxi/contacts/:
    get:
      operationId: auxi_contacts_list
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - auxi
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedContactList'
          description: ''
    post:
      operationId: auxi_contacts_create
      tags:
      - auxi
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Contact'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Contact'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Contact'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact'
          description: ''
  /auxi/contacts/{id}/:
    get:
      operationId: auxi_contacts_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - auxi
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact'
          description: ''
    put:
      operationId: auxi_contacts_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - auxi
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Contact'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Contact'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Contact'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact'
          description: ''
    delete:
      operationId: auxi_contacts_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - auxi
      security:
      - jwtAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /auxi/waitlists/:
    get:
      operationId: auxi_waitlists_list
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - auxi
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedWaitlistList'
          description: ''
    post:
      operationId: auxi_waitlists_create
      tags:
      - auxi
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Waitlist'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Waitlist'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Waitlist'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Waitlist'
          description: ''
  /auxi/waitlists/{id}/:
    get:
      operationId: auxi_waitlists_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - auxi
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Waitlist'
          description: ''
    put:
      operationId: auxi_waitlists_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - auxi
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Waitlist'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Waitlist'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Waitlist'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Waitlist'
          description: ''
    delete:
      operationId: auxi_waitlists_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - auxi
      security:
      - jwtAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /modelsx/chatgpt/:
    get:
      operationId: modelsx_chatgpt_retrieve
      tags:
      - modelsx
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
components:
  schemas:
    Contact:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        email:
          type: string
          maxLength: 60
        phoneNumber:
          type: string
          maxLength: 15
        message:
          type: string
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - email
      - id
      - message
      - phoneNumber
      - updated_at
    PaginatedContactList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Contact'
    PaginatedWaitlistList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Waitlist'
    TokenObtainPair:
      type: object
      properties:
        email:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          readOnly: true
      required:
      - access
      - email
      - password
      - refresh
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
      required:
      - access
      - refresh
    TokenVerify:
      type: object
      properties:
        token:
          type: string
          writeOnly: true
      required:
      - token
    Waitlist:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        email:
          type: string
          maxLength: 60
        phoneNumber:
          type: string
          maxLength: 15
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - email
      - id
      - phoneNumber
      - updated_at
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
